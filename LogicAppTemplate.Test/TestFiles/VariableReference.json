{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "logicAppName": {
      "type": "string",
      "defaultValue": "test",
      "metadata": {
        "description": "Name of the Logic App."
      }
    },
    "logicAppLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "allowedValues": [
        "[resourceGroup().location]",
        "eastasia",
        "southeastasia",
        "centralus",
        "eastus",
        "eastus2",
        "westus",
        "northcentralus",
        "southcentralus",
        "northeurope",
        "westeurope",
        "japanwest",
        "japaneast",
        "brazilsouth",
        "australiaeast",
        "australiasoutheast",
        "westcentralus",
        "westus2"
      ],
      "metadata": {
        "description": "Location of the Logic App."
      }
    },
    "HTTP-URI": {
      "type": "string",
      "defaultValue": "@{variables('URL')}_vti_bin/DN/DataService.svc/CurrencyRatesXML?lang=da"
    },
    "Initialize-Array-Value-Value": {
      "type": "array",
      "defaultValue": [
        "red",
        "orange",
        "yellow"
      ]
    },
    "Initialize-Boolean-False-Value": {
      "type": "bool",
      "defaultValue": false
    },
    "Initialize-Boolean-False-Expression-Value": {
      "type": "string",
      "defaultValue": "@false"
    },
    "Initialize-Boolean-True-Value": {
      "type": "bool",
      "defaultValue": true
    },
    "Initialize-Boolean-True-Expression-Value": {
      "type": "string",
      "defaultValue": "@true"
    },
    "Initialize-Float-0.01-Value": {
      "type": "string",
      "defaultValue": "0.01"
    },
    "Initialize-Integer-0-Value": {
      "type": "int",
      "defaultValue": 0
    },
    "Initialize-Object-Value-Value": {
      "type": "object",
      "defaultValue": {
        "Test": "Test"
      }
    },
    "Initialize-String-Null-Code-Value": {
      "type": "string",
      "defaultValue": "@null"
    },
    "Initialize-String-Null-Expression-Value": {
      "type": "string",
      "defaultValue": "@{null}"
    },
    "Initialize_variable-Value": {
      "type": "string",
      "defaultValue": "https://www.nationalbanken.dk/"
    }
  },
  "variables": {},
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2016-06-01",
      "name": "[parameters('logicAppName')]",
      "location": "[parameters('logicAppLocation')]",
      "dependsOn": [],
      "properties": {
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "actions": {
            "HTTP": {
              "inputs": {
                "method": "GET",
                "uri": "[parameters('HTTP-URI')]"
              },
              "runAfter": {
                "Initialize_variable": [
                  "Succeeded"
                ]
              },
              "type": "Http"
            },
            "Initialize-Array-NoValue": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestArrayNoValue",
                    "type": "Array"
                  }
                ]
              },
              "runAfter": {
                "Initialize-Object-Value": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-Array-Value": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestArrayValue",
                    "type": "Array",
                    "value": "[parameters('Initialize-Array-Value-Value')]"
                  }
                ]
              },
              "runAfter": {
                "Initialize-Array-NoValue": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-Boolean-False": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestBoolFalseNormal",
                    "type": "Boolean",
                    "value": "[parameters('Initialize-Boolean-False-Value')]"
                  }
                ]
              },
              "runAfter": {
                "Initialize-Boolean-True-Expression": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-Boolean-False-Expression": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestBoolFalseExpression",
                    "type": "Boolean",
                    "value": "[parameters('Initialize-Boolean-False-Expression-Value')]"
                  }
                ]
              },
              "runAfter": {
                "Initialize-Boolean-False": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-Boolean-True": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestBoolTrueNormal",
                    "type": "Boolean",
                    "value": "[parameters('Initialize-Boolean-True-Value')]"
                  }
                ]
              },
              "runAfter": {},
              "type": "InitializeVariable"
            },
            "Initialize-Boolean-True-Expression": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestBoolTrueExpression",
                    "type": "Boolean",
                    "value": "[parameters('Initialize-Boolean-True-Expression-Value')]"
                  }
                ]
              },
              "runAfter": {
                "Initialize-Boolean-True": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-Float-0.01": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestFloatValue",
                    "type": "Float",
                    "value": "[parameters('Initialize-Float-0.01-Value')]"
                  }
                ]
              },
              "runAfter": {
                "Initialize-Float-NoValue": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-Float-NoValue": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestFloatNoValue",
                    "type": "Float"
                  }
                ]
              },
              "runAfter": {
                "Initialize-Integer-0": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-Integer-0": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestIntegerValue",
                    "type": "Integer",
                    "value": "[parameters('Initialize-Integer-0-Value')]"
                  }
                ]
              },
              "runAfter": {
                "Initialize-Integer-NoValue": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-Integer-NoValue": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestIntegerNoValue",
                    "type": "Integer"
                  }
                ]
              },
              "runAfter": {
                "Initialize-String-Null-Expression": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-Object-NoValue": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestObjectNoValue",
                    "type": "Object"
                  }
                ]
              },
              "runAfter": {
                "Initialize-Float-0.01": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-Object-Value": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestObjectValue",
                    "type": "Object",
                    "value": "[parameters('Initialize-Object-Value-Value')]"
                  }
                ]
              },
              "runAfter": {
                "Initialize-Object-NoValue": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-String-NoValue": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestStringNoValue",
                    "type": "String"
                  }
                ]
              },
              "runAfter": {
                "Initialize-Boolean-False-Expression": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-String-Null-Code": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestStringNullFromCode",
                    "type": "String",
                    "value": "[parameters('Initialize-String-Null-Code-Value')]"
                  }
                ]
              },
              "runAfter": {
                "Initialize-String-NoValue": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize-String-Null-Expression": {
              "inputs": {
                "variables": [
                  {
                    "name": "TestStringNullExpression",
                    "type": "String",
                    "value": "[parameters('Initialize-String-Null-Expression-Value')]"
                  }
                ]
              },
              "runAfter": {
                "Initialize-String-Null-Code": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            },
            "Initialize_variable": {
              "inputs": {
                "variables": [
                  {
                    "name": "URL",
                    "type": "String",
                    "value": "[parameters('Initialize_variable-Value')]"
                  }
                ]
              },
              "runAfter": {
                "Initialize-Array-Value": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable"
            }
          },
          "contentVersion": "1.0.0.0",
          "outputs": {},
          "parameters": {},
          "triggers": {
            "manual": {
              "inputs": {
                "schema": {}
              },
              "kind": "Http",
              "type": "Request"
            }
          }
        },
        "parameters": {}
      }
    }
  ],
  "outputs": {}
}